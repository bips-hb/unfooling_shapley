% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sage.R
\name{SAGE}
\alias{SAGE}
\title{SAGE permutation estimator}
\usage{
SAGE(
  X,
  y,
  model,
  imputation = "marginal",
  loss,
  batch_size = 20,
  n_kn = 1,
  knockoff_fun = NULL,
  ...
)
}
\arguments{
\item{X}{input \code{data.frame} of covariates}

\item{y}{prediction target}

\item{model}{trained prediction model that takes an \code{X} like \code{data.frame} as input and returns predictions}

\item{loss}{loss function that takes the actual and predicted value as input and returns loss, e.g. Metrics::logloss()}

\item{n_kn}{number of knockoffs sampled for each observation in background distribution}

\item{knockoff_fun}{function to generate knockoffs, should take X as an input and return knockoffs for X}

\item{imputer}{function to impute values for out-of-coalition features; default is marginal imputation}
}
\value{
SAGE values for each feature
}
\description{
SAGE permutation estimator
}
\examples{
Classification task example:
X = iris[, !names(iris)\%in\%"Species"]
y = iris$Species == "setosa"
model_fit = glm(y ~ ., data = data.frame(X,y), family = binomial(link = "logit"))
model = function(input){predict(model_fit, newdata = input, type = "response")}
model_fit = ranger::ranger(y~., data = data.frame(X,y), probability = F)
model = function(input){predict(model_fit, data = input, type = "response")$predictions}
loss = Metrics::ll
SAGE(X = X, y = y, model = model, imputation = "marginal", loss = loss)
SAGE(X = X, y = y, model = model, imputation = "knockoff", loss = loss, n_kn = 10, knockoff_fun =  function(x){knockoff::create.second_order(as.matrix(x))})
Regression task example
model = function(input){predict(model_fit, newdata = input, type = "response")}
loss = Metrics::ae
X = USArrests[, !names(USArrests)\%in\%c("Murder")]
y = USArrests$Murder
knockoff_fun = function(x){knockoff::create.second_order(as.matrix(x))}
knockoff_fun = function(x){seqknockoff::knockoffs_seq(data.frame(lapply(x, as.numeric)))}
SAGE(X = X, y = y, model = model, imputation = "marginal", loss = loss)
SAGE(X = X, y = y, model = model, imputation = "knockoff", loss = loss, n_kn = 10, knockoff_fun =  function(x){seqknockoff::knockoffs_seq(data.frame(lapply(x, as.numeric)))})
}
